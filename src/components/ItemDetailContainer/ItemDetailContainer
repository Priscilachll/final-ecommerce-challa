import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import { getDoc, doc } from 'firebase/firestore';
import { db } from '../../services/firebase/firebaseConfig';
import './ItemDetailContainer.css';
import ItemDetail from '../ItemDetail/ItemDetail';

const ItemDetailContainer = () => {
  const [product, setProduct] = useState(null);
  const [loading, setLoading] = useState(true);
  const { itemId } = useParams();

  useEffect(() => {
    setLoading(true);

    const docRef = doc(db, 'products', itemId);

    getDoc(docRef)
      .then((response) => {
        if (response.exists()) {
          const data = response.data();
          const productAdapted = { id: response.id, ...data };
          setProduct(productAdapted);
        } else {
          console.error('No se encontrÃ³ el producto');
        }
      })
      .catch((error) => {
        console.error(error);
      })
      .finally(() => {
        setLoading(false);
      });
  }, [itemId]);

  return (
    <div className='ItemDetailContainer'>
      {loading ? <p>Loading...</p> : (product && <ItemDetail {...product} />)}
    </div>
  );
};

export default ItemDetailContainer;




// import React, { useState, useEffect } from 'react';
// import './ItemDetailContainer.css';
// import { getProductById } from '../../asyncMock';
// import ItemDetail from '../ItemDetail/ItemDetail';

//  const ItemDetailContainer = () => {
//    const [product, setProduct] = useState(null);

//    useEffect(() => {
//      const fetchData = async () => {
//        try {
//          const response = await getProductById('1');
//          setProduct(response);
//        } catch (error) {
//          console.error(error);
//        }
//      };

//      fetchData();
//    }, []);

//    return (
//      <div className='ItemDetailContainer'>
//        <ItemDetail {...product}/>
//      </div>
//    );
//  }
// export default ItemDetailContainer;

